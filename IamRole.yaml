Description: This creats an ECS Task Definition.
Parameters:
 # Required information to for the ECS Task Definition
  Name:
    Type: String
    Description: Name of the resource(s); Used to identify each individual resource
  Environment:
    Type: String
    Description: Provides information on what the resource group is used for (useful for maintenance, policy enforcement, chargeback, etc.)
    AllowedValues:
      - dev
      - qa
      - stg
      - prd
  CPU:
    Type: String
    Description: The number of cpu units used by the task
  Memory:
    Type: String
    Description: The ECS Task memory in MiB
  TaskRoleArn:
    Type: String
    Description: The Task and Execution Role used by the ECS Task 
    
 # Required Parameters for the Container Definition
  ContainerImage:
    Type: String
    Description: The image used to start a container 
  ContainerPort:
    Type: Number
    Description: The port number on the container that is bound
 # Required Parameters for DataDog Container Definition
Resources:
 # ECS Task Definition
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: !Ref CPU
      Memory: !Ref Memory
      TaskRoleArn: !Ref TaskRoleArn
      ExecutionRoleArn: !Ref TaskRoleArn
      Family: !Join ["-", [!Ref ApplicationCI, !Ref Name, !Ref Environment, td ] ]
#      Family: !Join ["-", [!Ref Group, !Ref ApplicationCI, !Ref Name, !Ref Environment, td ] ]
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: !Join ["-", [!Ref ApplicationCI, !Ref Name, !Ref Environment, container ] ]
          Image: !Ref ContainerImage
          StopTimeout: 120
          #EnvironmentFiles:
            #- Type: s3
              #Value: !Ref S3EnvFileArn
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              HostPort: !Ref ContainerPort
              Protocol: tcp
          #Ulimits:
            #- Name: nofile
              #HardLimit: 65535
              #SoftLimit: 65535
#          HealthCheck:
#            Command: !Ref HealthCheckCommand
#            StartPeriod: 120
#            Retries: 4
          LogConfiguration:
            LogDriver: awslogs
            Options:
                awslogs-group: !Ref LogGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: !Ref Environment
      Tags:
        - Key: AppName
          Value: !Join ["-", [!Ref ApplicationCI, !Ref Name, !Ref Environment, td ] ]
        - Key: Group
          Value: !Ref Group
