AWSTemplateFormatVersion: "2010-09-09"
Description: Creation of EKS
Parameters:
  SecurityGroup:
    Type: String
  SubnetId1:
    Type: String
  SubnetId2:
    Type: String 
  ClusterName:
    Type: String
Resources:
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      RoleArn: !GetAtt MasterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds: 
          - !Ref SecurityGroup
        SubnetIds:
          - !Ref SubnetId1
          - !Ref SubnetId2   
      Tags:
        - Key: Name
          Value: ControlPlane    
  MasterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
            Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
  Nodegroup:
    Type: AWS::EKS::Nodegroup
    Properties:
      ClusterName: !Ref EKSCluster
      NodeRole: !GetAtt NodeRole.Arn
      NodegroupName: Node1
      ScalingConfig:
        MinSize: 1
        DesiredSize: 2
        MaxSize: 2
      Subnets:
        - !Ref SubnetId1
        - !Ref SubnetId2
  NodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
Outputs:
  ClusterName1:
    Value: !Ref ClusterName